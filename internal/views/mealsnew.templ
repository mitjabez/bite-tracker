package views

import "fmt"
import "github.com/mitjabez/bite-tracker/internal/models"

templ MealsNew(meal models.MealView, errors map[string]string, symptoms []string) {
	<section class="section">
		<div class="container">
			<form hx-post="/meals/new" hx-target="body">
				<h1 class="title">Add Meal</h1>
				<div class="field">
					<label class="label" for="date">Date</label>
					<input class="input" type="date" id="date" name="date" value={ meal.DateOfMeal }/>
					<p class="help is-danger">{ errors["date"] }</p>
				</div>
				<div class="field">
					<label class="label" for="time">Time</label>
					<input class="input" type="time" id="time" name="time" value={ meal.TimeOfMeal }/>
					<p class="help is-danger">{ errors["time"] }</p>
				</div>
				<div class="field" x-data={ fmt.Sprintf("{ meal: \"%s\" }", meal.Description) }>
					<label class="label" for="meal">Meal</label>
					<div class="control has-icons-right">
						<input
							class={ templ.KV("input is-danger", errors["meal"] !="" ), "input" }
							type="text"
							id="meal"
							name="meal"
							placeholder="Type or pick below"
							x-data
							x-init="$el.focus()"
							x-model="meal"
						/>
						if errors["meal"] != "" {
							<span class="icon is-small is-right">
								<i class="fas fa-exclamation-triangle"></i>
							</span>
						}
						<p class="help is-danger">{ errors["meal"] }</p>
					</div>
					<div class="tags mt-2">
						<button class="tag" x-on:click="meal='Chicken Rice'">Chicken Rice</button>
						<button class="tag" x-on:click="meal='Oatmeal'">Oatmeal</button>
						<button class="tag" x-on:click="meal='Salad'">Salad</button>
					</div>
				</div>
				<div class="field" x-data={ fmt.Sprintf("{ range: %d }", meal.HungerLevel) }>
					<label class="label" for="hunger">Hunger Level (1-not hungry, 5-starving)</label>
					<div class="field has-addons">
						<div class="control">
							<input class="input" type="range" x-model="range" min="1" max="5" id="hunger" name="hunger"/>
							<p class="help is-danger">{ errors["hunger"] }</p>
						</div>
						<div class="control">
							<span class="button is-dark" x-text="range"></span>
						</div>
					</div>
				</div>
				<div class="field">
					<div class="tags">
						for _, symptom := range symptoms {
							<div x-data="{ selected: false }">
								<input type="checkbox" id={ symptom } name="symptoms" value={ symptom } style="display: none"/>
								<label
									x-bind:class="selected ? 'tag is-clickable is-info' : 'tag is-clickable'"
									x-on:click="selected = !selected; console.log(selected);"
									for={ symptom }
								>
									{ symptom }
								</label>
							</div>
						}
					</div>
					<select id="symptoms" name="symptoms" multiple>
						<option value="bluating">bloating</option>
					</select>
					<label class="label" for="symptoms">Symptoms</label>
					<div x-data="tags">
						<div x-show="selected" class="tags has-addons mt-2">
							<button class="tag is-danger">Bloating</button>
							<a class="tag is-delete" @click="toggle" href="#"></a>
						</div>
						<div x-show="!selected" class="tags mt-2">
							<button class="tag" @click="toggle" href="#">Bloating</button>
						</div>
						<!--button class="tag">Gas</button>
						<button class="tag">Acid</button>
						<button class="tag">Full</button-->
					</div>
					<script>
                    document.addEventListener('alpine:init', () => {
                        Alpine.data('tags', () => ({
                            selected: false,

                            toggle() {
                                this.selected = !this.selected
                                for (const option of document.querySelectorAll('#myselect option')) {
                                    console.log(option.value);
                                    if (option.value == "bloating") {
                                        if (selected) {
                                            option.setAttribute("selected", "selected");
                                        } else {
                                            option.removeAttribute("selected");
                                        }
                                    }
                                }
                            }
                        }))
                    })
                </script>
				</div>
				<div class="field is-grouped pt-5">
					<div class="control">
						<button type="submit" class="button is-primary">Submit</button>
					</div>
					<div class="control">
						<a class="button is-primary is-light" href={ "/meals?date=" + meal.DateOfMeal }>Cancel</a>
					</div>
				</div>
			</form>
		</div>
	</section>
}
