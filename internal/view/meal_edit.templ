package view

import "fmt"
import "github.com/mitjabez/bite-tracker/internal/model"

templ MealNew(meal model.MealView, errors map[string]string, symptoms []string, topMeals []string) {
	@mealForm("/meals/new", "POST", meal, errors, symptoms, topMeals)
}

templ MealEdit(meal model.MealView, errors map[string]string, symptoms []string, topMeals []string) {
	@mealForm("/meals/"+meal.Id+"/edit", "PUT", meal, errors, symptoms, topMeals)
}

templ mealForm(action string, method string, meal model.MealView, errors map[string]string, symptoms []string,
	topMeals []string) {
	<section class="section">
		<div class="container">
			<form if method=="POST" {
	hx-post={ action }
} else {
	hx-put={ action }
} hx-target="body">
				<h1 class="title">Add Meal</h1>
				<div class="field">
					<label class="label" for="date">Date</label>
					<input class="input" type="date" id="date" name="date" value={ meal.TimeOfMeal.Format("2006-01-02") }/>
					<p class="help is-danger">{ errors["date"] }</p>
				</div>
				<div class="field">
					<label class="label" for="time">Time</label>
					<input class="input" type="time" id="time" name="time" value={ meal.TimeOfMeal.Format("15:04") }/>
					<p class="help is-danger">{ errors["time"] }</p>
				</div>
				<div class="field" x-data={ fmt.Sprintf("{ meal: \"%s\" }", meal.Description) }>
					<label class="label" for="meal">Meal</label>
					<div class="control has-icons-right">
						<input
							class={ templ.KV("input is-danger", errors["meal"] !="" ), "input" }
							type="text"
							id="meal"
							name="meal"
							placeholder="Type or pick below"
							x-data
							x-init="$el.focus()"
							x-model="meal"
						/>
						if errors["meal"] != "" {
							<span class="icon is-small is-right">
								<i class="fas fa-exclamation-triangle"></i>
							</span>
						}
						<p class="help is-danger">{ errors["meal"] }</p>
					</div>
					<div class="tags mt-2">
						for _, tm := range topMeals {
							<button type="button" class="tag" x-on:click={ fmt.Sprintf("meal=\"%s\"", tm) }>{ tm }</button>
						}
					</div>
				</div>
				<div class="field" x-data={ fmt.Sprintf("{ range: %d }", meal.HungerLevel) }>
					<label class="label" for="hunger">Hunger Level (1-not hungry, 5-starving)</label>
					<div class="field has-addons">
						<div class="control">
							<input class="input" type="range" x-model="range" min="1" max="5" id="hunger" name="hunger"/>
							<p class="help is-danger">{ errors["hunger"] }</p>
						</div>
						<div class="control">
							<span class="button is-dark" x-text="range"></span>
						</div>
					</div>
				</div>
				<div class="field">
					<label class="label">Symptoms</label>
					<div class="tags">
						for _, symptom := range symptoms {
							<div x-data={ fmt.Sprintf("{ selected: %t }", meal.IsSymptomUsed(symptom)) }>
								<input type="checkbox" id={ symptom } name="symptoms" value={ symptom } style="display: none"/>
								<label
									x-bind:class="selected ? 'tag is-clickable is-info' : 'tag is-clickable'"
									x-on:click="selected = !selected; console.log(selected);"
									for={ symptom }
								>
									{ symptom }
								</label>
							</div>
						}
					</div>
					<p class="help is-danger">{ errors["symptoms"] }</p>
				</div>
				<div class="field is-grouped pt-5">
					<div class="control">
						<button type="submit" class="button is-primary">Submit</button>
					</div>
					<div class="control">
						<a
							class="button is-primary is-light"
							href={ "/meals?date=" + meal.TimeOfMeal.Format("2006-01-02") }
						>Cancel</a>
					</div>
				</div>
			</form>
		</div>
	</section>
}
